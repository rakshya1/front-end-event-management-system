graph TD
  U([User]) --> H[Home ("/")]
  H --> E[Events ("/events")]
  E -->|select event| ED[/Event Details ("/events/:id")/]
  ED -->|Add to Cart| C[Cart ("/cart")]
  C -->|Proceed to Checkout| CO[Checkout ("/checkout")]
  CO -->|Pay| OS[Order Success ("/order-success/:id")]
  ED -->|Pay with eSewa| BK[Booking Confirmed (toast)]

  %% Auth and route protection
  subgraph "Auth & Routing"
    L[Login ("/login")] -->|login()| AC[(AuthContext + session)]
    S[Signup ("/signup")] -->|signup()| AC
    PR{{ProtectedRoute role checks}} --> H
  end
  AC --> PR
  PR -. guards .-> C
  PR -. guards .-> CO
  PR -. guards .-> OS
  PR -. roles: organizer .-> CE[Create Event ("/create")]
  PR -. roles: organizer .-> EE[Edit Event ("/events/:id/edit")]
  PR -. roles: admin .-> AR[Admin Reports ("/admin")]
  PR -. roles: admin, organizer .-> AT[Attendees ("/attendees")]

  %% Events domain/state
  subgraph "Events State"
    EC[(EventContext: events + attendees)]
    M[Mock data: mockEvents.js + mockAttendees.js]
    API[API: services/api.js]
    EC <-- init fallback --> M
    EC <-- fetch /events --> API
    ED -->|getEventById| EC
    CE -->|createEvent| EC
    EE -->|updateEvent / deleteEvent| EC
    AT -->|getAllAttendees| EC
  end

  %% Cart domain/state
  subgraph "Cart State"
    CC[(CartContext: items + totals + localStorage)]
    ED -->|addItem(...)| CC
    C -->|update/remove| CC
    CO -->|clearCart on success| CC
  end

  %% Payments
  subgraph Payment
    PG[PaymentGateway / NepalPaymentGateway]
    CO -->|eSewa / Khalti / IME Pay| PG
    PG -->|onPaymentSuccess| OS
  end

  %% Navigation
  NAV[Navigation header] -->|role-based links| PR
  NAV --> H
  NAV --> E
  NAV --> C
